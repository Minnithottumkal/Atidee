<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="21" hostname="appus-HP-Pavilion-g6-Notebook-PC" failures="1" tests="16" name="Default test" time="48.422" errors="0" timestamp="09 May 2021 12:46:49 GMT">
  <testcase classname="com.simplogics.testcases.Loginpage" name="loginpage" time="3.893"/>
  <testcase classname="com.simplogics.testcases.CreateSpace" name="createSpace" time="0.014">
    <skipped/>
  </testcase> <!-- createSpace -->
  <testcase classname="com.simplogics.testcases.Companymenu" name="companymenu" time="0.578"/>
  <testcase classname="com.simplogics.testcases.CreateCompany" name="createCompany" time="4.479">
    <failure type="java.lang.AssertionError" message="expected [Company created successfully] but found [Duplicate company name]">
      <![CDATA[java.lang.AssertionError: expected [Company created successfully] but found [Duplicate company name]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at com.simplogics.base.BaseData.Asserttoast(BaseData.java:224)
	at com.simplogics.testcases.CreateCompany.createCompany(CreateCompany.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- createCompany -->
  <testcase classname="com.simplogics.testcases.CompanySearch" name="companySearch" time="0.016">
    <skipped/>
  </testcase> <!-- companySearch -->
  <testcase classname="com.simplogics.testcases.CompanyEdit" name="companyedit" time="0.013">
    <skipped/>
  </testcase> <!-- companyedit -->
  <testcase classname="com.simplogics.testcases.Companylocationoption" name="companylocationoption" time="0.021">
    <skipped/>
  </testcase> <!-- companylocationoption -->
  <testcase classname="com.simplogics.testcases.ManageCompanyLocation" name="manageCompanyLocation" time="0.02">
    <skipped/>
  </testcase> <!-- manageCompanyLocation -->
  <testcase classname="com.simplogics.testcases.Users" name="users" time="0.021">
    <skipped/>
  </testcase> <!-- users -->
  <testcase classname="com.simplogics.testcases.CreateUsers" name="createUsers" time="0.016">
    <skipped/>
  </testcase> <!-- createUsers -->
  <testcase classname="com.simplogics.testcases.UserSearch" name="userSearch" time="0.011">
    <skipped/>
  </testcase> <!-- userSearch -->
  <testcase classname="com.simplogics.testcases.Useredit" name="userEdit" time="0.015">
    <skipped/>
  </testcase> <!-- userEdit -->
  <testcase classname="com.simplogics.testcases.UserClearSession" name="userClearSession" time="0.009">
    <skipped/>
  </testcase> <!-- userClearSession -->
  <testcase classname="com.simplogics.testcases.UserChangePassword" name="userChnagepassword" time="0.02">
    <skipped/>
  </testcase> <!-- userChnagepassword -->
  <testcase classname="com.simplogics.testcases.Visits" name="visits" time="0.017">
    <skipped/>
  </testcase> <!-- visits -->
  <testcase classname="com.simplogics.testcases.CreateVisits" name="createVisits" time="0.004">
    <skipped/>
  </testcase> <!-- createVisits -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
  <testcase classname="com.simplogics.base.BaseData" name="@AfterTest Emailsend" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest Emailsend -->
</testsuite> <!-- Default test -->
